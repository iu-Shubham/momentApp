/// latitude : 21.25
/// longitude : 79.125
/// generationtime_ms : 0.09202957153320312
/// utc_offset_seconds : 19800
/// timezone : "Asia/Kolkata"
/// timezone_abbreviation : "IST"
/// elevation : 303.0
/// current_weather : {"temperature":27.7,"windspeed":4.0,"winddirection":0,"weathercode":95,"is_day":0,"time":"2023-09-28T18:45"}
/// hourly_units : {"time":"iso8601","temperature_2m":"°C","windspeed_10m":"km/h","precipitation":"mm","weathercode":"wmo code"}
/// hourly : {"time":["2023-09-28T00:00","2023-09-28T01:00","2023-09-28T02:00","2023-09-28T03:00","2023-09-28T04:00","2023-09-28T05:00","2023-09-28T06:00","2023-09-28T07:00","2023-09-28T08:00","2023-09-28T09:00","2023-09-28T10:00","2023-09-28T11:00","2023-09-28T12:00","2023-09-28T13:00","2023-09-28T14:00","2023-09-28T15:00","2023-09-28T16:00","2023-09-28T17:00","2023-09-28T18:00","2023-09-28T19:00","2023-09-28T20:00","2023-09-28T21:00","2023-09-28T22:00","2023-09-28T23:00","2023-09-29T00:00","2023-09-29T01:00","2023-09-29T02:00","2023-09-29T03:00","2023-09-29T04:00","2023-09-29T05:00","2023-09-29T06:00","2023-09-29T07:00","2023-09-29T08:00","2023-09-29T09:00","2023-09-29T10:00","2023-09-29T11:00","2023-09-29T12:00","2023-09-29T13:00","2023-09-29T14:00","2023-09-29T15:00","2023-09-29T16:00","2023-09-29T17:00","2023-09-29T18:00","2023-09-29T19:00","2023-09-29T20:00","2023-09-29T21:00","2023-09-29T22:00","2023-09-29T23:00","2023-09-30T00:00","2023-09-30T01:00","2023-09-30T02:00","2023-09-30T03:00","2023-09-30T04:00","2023-09-30T05:00","2023-09-30T06:00","2023-09-30T07:00","2023-09-30T08:00","2023-09-30T09:00","2023-09-30T10:00","2023-09-30T11:00","2023-09-30T12:00","2023-09-30T13:00","2023-09-30T14:00","2023-09-30T15:00","2023-09-30T16:00","2023-09-30T17:00","2023-09-30T18:00","2023-09-30T19:00","2023-09-30T20:00","2023-09-30T21:00","2023-09-30T22:00","2023-09-30T23:00","2023-10-01T00:00","2023-10-01T01:00","2023-10-01T02:00","2023-10-01T03:00","2023-10-01T04:00","2023-10-01T05:00","2023-10-01T06:00","2023-10-01T07:00","2023-10-01T08:00","2023-10-01T09:00","2023-10-01T10:00","2023-10-01T11:00","2023-10-01T12:00","2023-10-01T13:00","2023-10-01T14:00","2023-10-01T15:00","2023-10-01T16:00","2023-10-01T17:00","2023-10-01T18:00","2023-10-01T19:00","2023-10-01T20:00","2023-10-01T21:00","2023-10-01T22:00","2023-10-01T23:00","2023-10-02T00:00","2023-10-02T01:00","2023-10-02T02:00","2023-10-02T03:00","2023-10-02T04:00","2023-10-02T05:00","2023-10-02T06:00","2023-10-02T07:00","2023-10-02T08:00","2023-10-02T09:00","2023-10-02T10:00","2023-10-02T11:00","2023-10-02T12:00","2023-10-02T13:00","2023-10-02T14:00","2023-10-02T15:00","2023-10-02T16:00","2023-10-02T17:00","2023-10-02T18:00","2023-10-02T19:00","2023-10-02T20:00","2023-10-02T21:00","2023-10-02T22:00","2023-10-02T23:00","2023-10-03T00:00","2023-10-03T01:00","2023-10-03T02:00","2023-10-03T03:00","2023-10-03T04:00","2023-10-03T05:00","2023-10-03T06:00","2023-10-03T07:00","2023-10-03T08:00","2023-10-03T09:00","2023-10-03T10:00","2023-10-03T11:00","2023-10-03T12:00","2023-10-03T13:00","2023-10-03T14:00","2023-10-03T15:00","2023-10-03T16:00","2023-10-03T17:00","2023-10-03T18:00","2023-10-03T19:00","2023-10-03T20:00","2023-10-03T21:00","2023-10-03T22:00","2023-10-03T23:00","2023-10-04T00:00","2023-10-04T01:00","2023-10-04T02:00","2023-10-04T03:00","2023-10-04T04:00","2023-10-04T05:00","2023-10-04T06:00","2023-10-04T07:00","2023-10-04T08:00","2023-10-04T09:00","2023-10-04T10:00","2023-10-04T11:00","2023-10-04T12:00","2023-10-04T13:00","2023-10-04T14:00","2023-10-04T15:00","2023-10-04T16:00","2023-10-04T17:00","2023-10-04T18:00","2023-10-04T19:00","2023-10-04T20:00","2023-10-04T21:00","2023-10-04T22:00","2023-10-04T23:00"],"temperature_2m":[26.3,25.9,25.6,25.4,25.1,25.0,24.7,25.1,25.8,26.5,27.1,30.0,30.8,31.7,32.1,31.7,31.3,29.2,27.9,27.2,26.7,26.3,26.0,25.8,25.6,25.1,24.7,24.6,24.5,24.4,24.4,25.1,26.4,27.3,28.3,29.7,31.1,31.5,31.4,31.1,30.8,29.5,28.5,27.7,27.1,26.7,26.4,26.1,25.8,25.5,25.1,24.9,24.6,24.3,24.3,25.2,26.4,28.1,29.3,30.4,31.6,32.2,32.3,32.2,31.9,30.0,28.7,27.7,27.0,26.6,26.2,26.1,25.8,25.5,24.9,24.6,24.3,24.2,24.2,24.9,26.2,27.7,28.6,29.7,30.8,31.5,31.6,31.2,30.2,29.1,28.4,27.7,27.1,26.6,26.1,25.7,25.5,25.3,25.2,25.0,24.8,24.9,25.6,26.7,27.7,28.5,29.4,30.1,30.9,31.6,31.7,30.7,29.2,28.0,27.6,27.6,27.5,27.2,26.8,26.5,26.2,25.9,25.7,25.4,25.1,25.1,25.6,26.4,27.4,28.5,29.7,30.6,31.0,32.0,32.6,32.5,32.1,31.4,30.3,28.9,27.7,26.9,26.1,25.5,24.8,24.3,23.7,23.1,22.5,22.4,23.0,24.2,25.7,27.8,30.1,32.0,33.2,33.9,34.1,33.7,32.7,31.5,30.0,28.4,27.1,26.3,25.9,25.4],"windspeed_10m":[2.9,3.4,3.1,2.5,1.5,0.7,1.5,2.5,3.1,4.0,4.0,2.2,1.6,2.1,1.9,2.8,4.3,7.6,4.7,2.4,2.9,2.4,2.5,2.9,2.5,2.2,2.9,3.1,4.0,3.3,2.9,2.6,3.7,5.4,4.0,3.3,2.7,2.3,2.6,2.2,0.7,0.7,2.5,3.6,3.3,3.2,3.1,2.4,2.5,0.8,2.0,2.3,2.3,1.4,1.1,1.6,2.6,3.9,2.9,2.9,1.3,1.1,1.1,2.5,2.8,2.2,1.8,0.4,1.3,2.3,1.4,1.6,2.1,3.1,4.2,3.4,2.0,0.7,2.3,2.3,2.5,1.8,3.4,4.1,4.8,4.3,4.2,3.6,3.1,3.3,4.0,4.7,5.2,4.7,3.9,4.0,4.0,3.7,3.4,2.9,2.8,2.8,3.6,4.7,5.5,5.4,5.2,5.3,6.1,7.8,8.7,8.0,6.7,5.8,4.3,3.1,2.7,2.9,3.3,3.8,3.8,3.8,3.9,4.3,5.0,5.7,6.4,7.5,8.2,9.0,10.5,12.1,12.5,13.3,13.5,12.5,10.5,8.7,7.7,7.0,6.5,5.7,4.6,3.8,3.4,3.0,3.3,3.6,3.6,4.0,4.2,4.5,5.2,7.0,9.4,11.2,13.1,15.0,15.5,13.7,10.9,8.2,6.5,5.5,5.2,5.1,4.7,4.8],"precipitation":[0.00,0.00,0.00,0.00,0.20,0.90,2.90,0.80,2.30,1.30,0.40,0.40,0.10,0.10,0.10,0.20,0.30,2.00,1.30,0.80,1.40,1.30,0.10,0.00,0.00,1.30,0.60,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.20,0.10,0.10,0.10,0.10,0.10,1.10,1.20,0.50,0.00,0.00,0.00,0.00,0.00,0.30,0.80,0.90,1.30,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.50,1.40,2.70,2.80,1.40,0.90,0.20,0.00,0.20,1.20,1.50,2.20,1.90,0.90,0.10,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.50,1.60,1.00,1.00,1.00,0.80,0.80,0.80,0.10,0.10,0.10,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.10,0.00,0.00,0.00,4.10,4.10,4.10,0.30,0.30,0.30,0.30,0.30,0.30,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.10,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],"weathercode":[3,3,3,3,80,95,95,95,95,95,80,80,3,3,3,80,80,95,95,95,95,95,3,3,3,95,80,3,3,3,3,3,2,3,2,3,3,3,3,3,3,95,95,80,3,3,3,3,3,80,95,95,95,80,2,2,3,3,2,2,2,3,3,3,3,80,95,96,95,95,95,3,3,3,95,95,95,95,95,3,3,3,3,3,2,2,3,3,80,95,95,95,95,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,3,3,3,95,95,95,80,80,80,80,80,80,3,3,3,2,2,2,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3]}
/// daily_units : {"time":"iso8601","weathercode":"wmo code","temperature_2m_max":"°C","temperature_2m_min":"°C"}
/// daily : {"time":["2023-09-28","2023-09-29","2023-09-30","2023-10-01","2023-10-02","2023-10-03","2023-10-04"],"weathercode":[95,95,96,95,95,3,3],"temperature_2m_max":[32.1,31.5,32.3,31.6,31.7,32.6,34.1],"temperature_2m_min":[24.7,24.4,24.3,24.2,24.8,25.1,22.4]}

class WeatherData {
  WeatherData({
    this.latitude,
    this.longitude,
    this.generationtimeMs,
    this.utcOffsetSeconds,
    this.timezone,
    this.timezoneAbbreviation,
    this.elevation,
    this.currentWeather,
    this.hourlyUnits,
    this.hourly,
    this.dailyUnits,
    this.daily,
  });

  WeatherData.fromJson(dynamic json) {
    latitude = json['latitude'];
    longitude = json['longitude'];
    generationtimeMs = json['generationtime_ms'];
    utcOffsetSeconds = json['utc_offset_seconds'];
    timezone = json['timezone'];
    timezoneAbbreviation = json['timezone_abbreviation'];
    elevation = json['elevation'];
    currentWeather = json['current_weather'] != null
        ? CurrentWeather.fromJson(json['current_weather'])
        : null;
    hourlyUnits = json['hourly_units'] != null
        ? HourlyUnits.fromJson(json['hourly_units'])
        : null;
    hourly = json['hourly'] != null ? Hourly.fromJson(json['hourly']) : null;
    dailyUnits = json['daily_units'] != null
        ? DailyUnits.fromJson(json['daily_units'])
        : null;
    daily = json['daily'] != null ? Daily.fromJson(json['daily']) : null;
  }
  num? latitude;
  num? longitude;
  num? generationtimeMs;
  num? utcOffsetSeconds;
  String? timezone;
  String? timezoneAbbreviation;
  num? elevation;
  CurrentWeather? currentWeather;
  HourlyUnits? hourlyUnits;
  Hourly? hourly;
  DailyUnits? dailyUnits;
  Daily? daily;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['latitude'] = latitude;
    map['longitude'] = longitude;
    map['generationtime_ms'] = generationtimeMs;
    map['utc_offset_seconds'] = utcOffsetSeconds;
    map['timezone'] = timezone;
    map['timezone_abbreviation'] = timezoneAbbreviation;
    map['elevation'] = elevation;
    if (currentWeather != null) {
      map['current_weather'] = currentWeather?.toJson();
    }
    if (hourlyUnits != null) {
      map['hourly_units'] = hourlyUnits?.toJson();
    }
    if (hourly != null) {
      map['hourly'] = hourly?.toJson();
    }
    if (dailyUnits != null) {
      map['daily_units'] = dailyUnits?.toJson();
    }
    if (daily != null) {
      map['daily'] = daily?.toJson();
    }
    return map;
  }
}

/// time : ["2023-09-28","2023-09-29","2023-09-30","2023-10-01","2023-10-02","2023-10-03","2023-10-04"]
/// weathercode : [95,95,96,95,95,3,3]
/// temperature_2m_max : [32.1,31.5,32.3,31.6,31.7,32.6,34.1]
/// temperature_2m_min : [24.7,24.4,24.3,24.2,24.8,25.1,22.4]

class Daily {
  Daily({
    this.time,
    this.weathercode,
    this.temperature2mMax,
    this.temperature2mMin,
  });

  Daily.fromJson(dynamic json) {
    time = json['time'] != null ? json['time'].cast<String>() : [];
    weathercode =
        json['weathercode'] != null ? json['weathercode'].cast<num>() : [];
    temperature2mMax = json['temperature_2m_max'] != null
        ? json['temperature_2m_max'].cast<num>()
        : [];
    temperature2mMin = json['temperature_2m_min'] != null
        ? json['temperature_2m_min'].cast<num>()
        : [];
  }
  List<String>? time;
  List<num>? weathercode;
  List<num>? temperature2mMax;
  List<num>? temperature2mMin;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['time'] = time;
    map['weathercode'] = weathercode;
    map['temperature_2m_max'] = temperature2mMax;
    map['temperature_2m_min'] = temperature2mMin;
    return map;
  }
}

/// time : "iso8601"
/// weathercode : "wmo code"
/// temperature_2m_max : "°C"
/// temperature_2m_min : "°C"

class DailyUnits {
  DailyUnits({
    this.time,
    this.weathercode,
    this.temperature2mMax,
    this.temperature2mMin,
  });

  DailyUnits.fromJson(dynamic json) {
    time = json['time'];
    weathercode = json['weathercode'];
    temperature2mMax = json['temperature_2m_max'];
    temperature2mMin = json['temperature_2m_min'];
  }
  String? time;
  String? weathercode;
  String? temperature2mMax;
  String? temperature2mMin;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['time'] = time;
    map['weathercode'] = weathercode;
    map['temperature_2m_max'] = temperature2mMax;
    map['temperature_2m_min'] = temperature2mMin;
    return map;
  }
}

/// time : ["2023-09-28T00:00","2023-09-28T01:00","2023-09-28T02:00","2023-09-28T03:00","2023-09-28T04:00","2023-09-28T05:00","2023-09-28T06:00","2023-09-28T07:00","2023-09-28T08:00","2023-09-28T09:00","2023-09-28T10:00","2023-09-28T11:00","2023-09-28T12:00","2023-09-28T13:00","2023-09-28T14:00","2023-09-28T15:00","2023-09-28T16:00","2023-09-28T17:00","2023-09-28T18:00","2023-09-28T19:00","2023-09-28T20:00","2023-09-28T21:00","2023-09-28T22:00","2023-09-28T23:00","2023-09-29T00:00","2023-09-29T01:00","2023-09-29T02:00","2023-09-29T03:00","2023-09-29T04:00","2023-09-29T05:00","2023-09-29T06:00","2023-09-29T07:00","2023-09-29T08:00","2023-09-29T09:00","2023-09-29T10:00","2023-09-29T11:00","2023-09-29T12:00","2023-09-29T13:00","2023-09-29T14:00","2023-09-29T15:00","2023-09-29T16:00","2023-09-29T17:00","2023-09-29T18:00","2023-09-29T19:00","2023-09-29T20:00","2023-09-29T21:00","2023-09-29T22:00","2023-09-29T23:00","2023-09-30T00:00","2023-09-30T01:00","2023-09-30T02:00","2023-09-30T03:00","2023-09-30T04:00","2023-09-30T05:00","2023-09-30T06:00","2023-09-30T07:00","2023-09-30T08:00","2023-09-30T09:00","2023-09-30T10:00","2023-09-30T11:00","2023-09-30T12:00","2023-09-30T13:00","2023-09-30T14:00","2023-09-30T15:00","2023-09-30T16:00","2023-09-30T17:00","2023-09-30T18:00","2023-09-30T19:00","2023-09-30T20:00","2023-09-30T21:00","2023-09-30T22:00","2023-09-30T23:00","2023-10-01T00:00","2023-10-01T01:00","2023-10-01T02:00","2023-10-01T03:00","2023-10-01T04:00","2023-10-01T05:00","2023-10-01T06:00","2023-10-01T07:00","2023-10-01T08:00","2023-10-01T09:00","2023-10-01T10:00","2023-10-01T11:00","2023-10-01T12:00","2023-10-01T13:00","2023-10-01T14:00","2023-10-01T15:00","2023-10-01T16:00","2023-10-01T17:00","2023-10-01T18:00","2023-10-01T19:00","2023-10-01T20:00","2023-10-01T21:00","2023-10-01T22:00","2023-10-01T23:00","2023-10-02T00:00","2023-10-02T01:00","2023-10-02T02:00","2023-10-02T03:00","2023-10-02T04:00","2023-10-02T05:00","2023-10-02T06:00","2023-10-02T07:00","2023-10-02T08:00","2023-10-02T09:00","2023-10-02T10:00","2023-10-02T11:00","2023-10-02T12:00","2023-10-02T13:00","2023-10-02T14:00","2023-10-02T15:00","2023-10-02T16:00","2023-10-02T17:00","2023-10-02T18:00","2023-10-02T19:00","2023-10-02T20:00","2023-10-02T21:00","2023-10-02T22:00","2023-10-02T23:00","2023-10-03T00:00","2023-10-03T01:00","2023-10-03T02:00","2023-10-03T03:00","2023-10-03T04:00","2023-10-03T05:00","2023-10-03T06:00","2023-10-03T07:00","2023-10-03T08:00","2023-10-03T09:00","2023-10-03T10:00","2023-10-03T11:00","2023-10-03T12:00","2023-10-03T13:00","2023-10-03T14:00","2023-10-03T15:00","2023-10-03T16:00","2023-10-03T17:00","2023-10-03T18:00","2023-10-03T19:00","2023-10-03T20:00","2023-10-03T21:00","2023-10-03T22:00","2023-10-03T23:00","2023-10-04T00:00","2023-10-04T01:00","2023-10-04T02:00","2023-10-04T03:00","2023-10-04T04:00","2023-10-04T05:00","2023-10-04T06:00","2023-10-04T07:00","2023-10-04T08:00","2023-10-04T09:00","2023-10-04T10:00","2023-10-04T11:00","2023-10-04T12:00","2023-10-04T13:00","2023-10-04T14:00","2023-10-04T15:00","2023-10-04T16:00","2023-10-04T17:00","2023-10-04T18:00","2023-10-04T19:00","2023-10-04T20:00","2023-10-04T21:00","2023-10-04T22:00","2023-10-04T23:00"]
/// temperature_2m : [26.3,25.9,25.6,25.4,25.1,25.0,24.7,25.1,25.8,26.5,27.1,30.0,30.8,31.7,32.1,31.7,31.3,29.2,27.9,27.2,26.7,26.3,26.0,25.8,25.6,25.1,24.7,24.6,24.5,24.4,24.4,25.1,26.4,27.3,28.3,29.7,31.1,31.5,31.4,31.1,30.8,29.5,28.5,27.7,27.1,26.7,26.4,26.1,25.8,25.5,25.1,24.9,24.6,24.3,24.3,25.2,26.4,28.1,29.3,30.4,31.6,32.2,32.3,32.2,31.9,30.0,28.7,27.7,27.0,26.6,26.2,26.1,25.8,25.5,24.9,24.6,24.3,24.2,24.2,24.9,26.2,27.7,28.6,29.7,30.8,31.5,31.6,31.2,30.2,29.1,28.4,27.7,27.1,26.6,26.1,25.7,25.5,25.3,25.2,25.0,24.8,24.9,25.6,26.7,27.7,28.5,29.4,30.1,30.9,31.6,31.7,30.7,29.2,28.0,27.6,27.6,27.5,27.2,26.8,26.5,26.2,25.9,25.7,25.4,25.1,25.1,25.6,26.4,27.4,28.5,29.7,30.6,31.0,32.0,32.6,32.5,32.1,31.4,30.3,28.9,27.7,26.9,26.1,25.5,24.8,24.3,23.7,23.1,22.5,22.4,23.0,24.2,25.7,27.8,30.1,32.0,33.2,33.9,34.1,33.7,32.7,31.5,30.0,28.4,27.1,26.3,25.9,25.4]
/// windspeed_10m : [2.9,3.4,3.1,2.5,1.5,0.7,1.5,2.5,3.1,4.0,4.0,2.2,1.6,2.1,1.9,2.8,4.3,7.6,4.7,2.4,2.9,2.4,2.5,2.9,2.5,2.2,2.9,3.1,4.0,3.3,2.9,2.6,3.7,5.4,4.0,3.3,2.7,2.3,2.6,2.2,0.7,0.7,2.5,3.6,3.3,3.2,3.1,2.4,2.5,0.8,2.0,2.3,2.3,1.4,1.1,1.6,2.6,3.9,2.9,2.9,1.3,1.1,1.1,2.5,2.8,2.2,1.8,0.4,1.3,2.3,1.4,1.6,2.1,3.1,4.2,3.4,2.0,0.7,2.3,2.3,2.5,1.8,3.4,4.1,4.8,4.3,4.2,3.6,3.1,3.3,4.0,4.7,5.2,4.7,3.9,4.0,4.0,3.7,3.4,2.9,2.8,2.8,3.6,4.7,5.5,5.4,5.2,5.3,6.1,7.8,8.7,8.0,6.7,5.8,4.3,3.1,2.7,2.9,3.3,3.8,3.8,3.8,3.9,4.3,5.0,5.7,6.4,7.5,8.2,9.0,10.5,12.1,12.5,13.3,13.5,12.5,10.5,8.7,7.7,7.0,6.5,5.7,4.6,3.8,3.4,3.0,3.3,3.6,3.6,4.0,4.2,4.5,5.2,7.0,9.4,11.2,13.1,15.0,15.5,13.7,10.9,8.2,6.5,5.5,5.2,5.1,4.7,4.8]
/// precipitation : [0.00,0.00,0.00,0.00,0.20,0.90,2.90,0.80,2.30,1.30,0.40,0.40,0.10,0.10,0.10,0.20,0.30,2.00,1.30,0.80,1.40,1.30,0.10,0.00,0.00,1.30,0.60,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.20,0.10,0.10,0.10,0.10,0.10,1.10,1.20,0.50,0.00,0.00,0.00,0.00,0.00,0.30,0.80,0.90,1.30,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.50,1.40,2.70,2.80,1.40,0.90,0.20,0.00,0.20,1.20,1.50,2.20,1.90,0.90,0.10,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.50,1.60,1.00,1.00,1.00,0.80,0.80,0.80,0.10,0.10,0.10,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.10,0.00,0.00,0.00,4.10,4.10,4.10,0.30,0.30,0.30,0.30,0.30,0.30,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.10,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00]
/// weathercode : [3,3,3,3,80,95,95,95,95,95,80,80,3,3,3,80,80,95,95,95,95,95,3,3,3,95,80,3,3,3,3,3,2,3,2,3,3,3,3,3,3,95,95,80,3,3,3,3,3,80,95,95,95,80,2,2,3,3,2,2,2,3,3,3,3,80,95,96,95,95,95,3,3,3,95,95,95,95,95,3,3,3,3,3,2,2,3,3,80,95,95,95,95,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,3,3,3,95,95,95,80,80,80,80,80,80,3,3,3,2,2,2,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3]

class Hourly {
  Hourly({
    this.time,
    this.temperature2m,
    this.windspeed10m,
    this.precipitation,
    this.weathercode,
  });

  Hourly.fromJson(dynamic json) {
    time = json['time'] != null ? json['time'].cast<String>() : [];
    temperature2m = json['temperature_2m'] != null
        ? json['temperature_2m'].cast<num>()
        : [];
    windspeed10m =
        json['windspeed_10m'] != null ? json['windspeed_10m'].cast<num>() : [];
    precipitation =
        json['precipitation'] != null ? json['precipitation'].cast<num>() : [];
    weathercode =
        json['weathercode'] != null ? json['weathercode'].cast<num>() : [];
  }
  List<String>? time;
  List<num>? temperature2m;
  List<num>? windspeed10m;
  List<num>? precipitation;
  List<num>? weathercode;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['time'] = time;
    map['temperature_2m'] = temperature2m;
    map['windspeed_10m'] = windspeed10m;
    map['precipitation'] = precipitation;
    map['weathercode'] = weathercode;
    return map;
  }
}

/// time : "iso8601"
/// temperature_2m : "°C"
/// windspeed_10m : "km/h"
/// precipitation : "mm"
/// weathercode : "wmo code"

class HourlyUnits {
  HourlyUnits({
    this.time,
    this.temperature2m,
    this.windspeed10m,
    this.precipitation,
    this.weathercode,
  });

  HourlyUnits.fromJson(dynamic json) {
    time = json['time'];
    temperature2m = json['temperature_2m'];
    windspeed10m = json['windspeed_10m'];
    precipitation = json['precipitation'];
    weathercode = json['weathercode'];
  }
  String? time;
  String? temperature2m;
  String? windspeed10m;
  String? precipitation;
  String? weathercode;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['time'] = time;
    map['temperature_2m'] = temperature2m;
    map['windspeed_10m'] = windspeed10m;
    map['precipitation'] = precipitation;
    map['weathercode'] = weathercode;
    return map;
  }
}

/// temperature : 27.7
/// windspeed : 4.0
/// winddirection : 0
/// weathercode : 95
/// is_day : 0
/// time : "2023-09-28T18:45"

class CurrentWeather {
  CurrentWeather({
    this.temperature,
    this.windspeed,
    this.winddirection,
    this.weathercode,
    this.isDay,
    this.time,
  });

  CurrentWeather.fromJson(dynamic json) {
    temperature = json['temperature'];
    windspeed = json['windspeed'];
    winddirection = json['winddirection'];
    weathercode = json['weathercode'];
    isDay = json['is_day'];
    time = json['time'];
  }
  num? temperature;
  num? windspeed;
  num? winddirection;
  num? weathercode;
  num? isDay;
  String? time;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['temperature'] = temperature;
    map['windspeed'] = windspeed;
    map['winddirection'] = winddirection;
    map['weathercode'] = weathercode;
    map['is_day'] = isDay;
    map['time'] = time;
    return map;
  }
}
